"use strict";(self.webpackChunkguidelines=self.webpackChunkguidelines||[]).push([[2025],{1640:function(t){t.exports=JSON.parse('{"blogPosts":[{"id":"eslint-post","metadata":{"permalink":"/test-doc/blog/eslint-post","source":"@site/blog/eslint.mdx","title":"Eslint Configuration","description":"Eslint configuration for react native project","date":"2022-04-10T17:15:31.000Z","formattedDate":"April 10, 2022","tags":[{"label":"prettier","permalink":"/test-doc/blog/tags/prettier"},{"label":"typescript","permalink":"/test-doc/blog/tags/typescript"}],"truncated":false,"authors":[],"frontMatter":{"slug":"eslint-post","title":"Eslint Configuration","authors":[],"tags":["prettier","typescript"]},"nextItem":{"title":"Prettier Configuration","permalink":"/test-doc/blog/prettier-post"}},"content":"Eslint configuration for react native project\\n\\n## Install required dependencies\\n\\n```bash\\nyarn add -D @typescript-eslint/parser\\n```\\n\\n```bash\\nyarn add -D @typescript-eslint/eslint-plugin\\n```\\n\\n## Add a the plugins\\n\\nFirst of all create a file named `.eslintrc.js` in the root directory if it doesn\'t exists.\\nAfter that to use eslint configuration\\n\\nModify the `.eslintrc.js` file and add the following lines:\\n\\n```js title=\\".eslintrc.js\\"\\nmodule.exports = {\\n  root: true,\\n  extends: [\'@react-native-community\'],\\n  // highlight-start\\n  parser: \'@typescript-eslint/parser\',\\n  plugins: [\'@typescript-eslint\'],\\n  // highlight-end\\n  ignorePatterns: [\'node_modules\']\\n};\\n```\\n\\n\\n## Override the rules\\n\\n```js title=\\".eslintrc.js\\"\\nmodule.exports = {\\n  root: true,\\n  extends: [\'@react-native-community\'],\\n  parser: \'@typescript-eslint/parser\',\\n  plugins: [\'@typescript-eslint\'],\\n  // highlight-start\\n  overrides: [\\n    {\\n      files: [\'*.ts\', \'*.tsx\'],\\n      rules: {\\n        \'react-hooks/rules-of-hooks\': \'error\', // Checks rules of Hooks\\n        \'react-hooks/exhaustive-deps\': \'warn\', // Checks effect dependencies\\n        \'@typescript-eslint/no-shadow\': [\'error\'],\\n        \'no-shadow\': \'off\',\\n        \'no-undef\': \'off\',\\n        \'no-console\': \'error\',\\n      },\\n    },\\n  ],\\n  // highlight-end\\n  ignorePatterns: [\'node_modules\', \'coverage\'],\\n};\\n```"},{"id":"prettier-post","metadata":{"permalink":"/test-doc/blog/prettier-post","source":"@site/blog/prettier.mdx","title":"Prettier Configuration","description":"Prettier configuration for react native project","date":"2022-04-10T17:15:31.000Z","formattedDate":"April 10, 2022","tags":[{"label":"prettier","permalink":"/test-doc/blog/tags/prettier"},{"label":"typescript","permalink":"/test-doc/blog/tags/typescript"}],"truncated":false,"authors":[],"frontMatter":{"slug":"prettier-post","title":"Prettier Configuration","authors":[],"tags":["prettier","typescript"],"sidebar_position":2},"prevItem":{"title":"Eslint Configuration","permalink":"/test-doc/blog/eslint-post"}},"content":"Prettier configuration for react native project\\n\\n## Install required dependencies\\n\\n```bash\\nyarn add -D prettier\\n```\\n\\n## Add a the plugins\\n\\nFirst of all create a file named `.prettierrc.js` in the root directory if it doesn\'t exists.\\nAfter that modify it and add the following lines:\\n\\n```js\\nmodule.exports = {\\n  bracketSpacing: true,\\n  jsxBracketSameLine: true,\\n  singleQuote: true,\\n  trailingComma: \'all\',\\n  arrowParens: \'avoid\',\\n  tabWidth: 2,\\n  bracketSameLine: true\\n};\\n```"}]}')}}]);